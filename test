local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
getgenv().SecureMode = true
local Window = Rayfield:CreateWindow({
   Name = "Chicha hub",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Chicha"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local plr = game:GetService('Players').LocalPlayer
local Tab = Window:CreateTab("Main", nil) -- Title, Image
local Section = Tab:CreateSection("Hello World")

local TapButton = Tab:CreateButton({
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})
local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   Flag = "Slider1",
   CurrentValue = 16,
   Callback = function(Value)
         game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
         Rayfield:LoadConfiguration()
   end,
})


-- local Input = Tab:CreateInput({
--    Name = "Input Key",
--    PlaceholderText = "Input Placeholder",
--    RemoveTextAfterFocusLost = false,
--    Flag = "webhook",
--    Callback = function(Text)
--    -- The function that takes place when the input is changed
--    -- The variable (Text) is a string for the value in the text box
--    Rayfield:LoadConfiguration()
--    end,
-- })
