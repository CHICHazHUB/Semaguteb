-- plant Seed
local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 1,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 2,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 3,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 4,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 5,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 6,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 7,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 8,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 9,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "PlantSeed",
    [3] = 10,
    [4] = "Diamond"
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))


-- plant seed end
-- start instapGrow
local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 1
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 2
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 3
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 4
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 5
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 6
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 7
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 8
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 9
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "InstaGrowSeed",
    [3] = 10
}

game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))

--end Growplant
--start Claim
local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 1
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 2
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 3
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 4
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 5
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 6
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 7
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 8
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 9
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

local args = {
    [1] = "FlowerGarden",
    [2] = "ClaimPlant",
    [3] = 10
}

game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))
end
local a = game.Players.LocalPlayer.Character.HumanoidRootPart
local b = workspace.__THINGS

local function get()
    local cf = a.CFrame
    for i,v in pairs(b.Lootbags:GetChildren()) do
    v:PivotTo(cf)
    end
    for i,v in pairs(b.Orbs:GetChildren()) do
    v:PivotTo(cf)

    end
end


while task.wait(0.5) do
get()
end
