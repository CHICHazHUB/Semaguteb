getgenv().config = {
    autoGarden = false,
    Collectloot = true,
    CollectPresents = false,
}

local Remote = game.ReplicatedStorage.Network.Instancing_InvokeCustomFromClient

while getgenv().config.autoGarden do task.wait()
    local count = 1
    for i = 1,10 do
        Remote:InvokeServer("FlowerGarden", "PlantSeed", count, "Diamond")
        Remote:InvokeServer("FlowerGarden", "InstaGrowSeed", count)
        Remote:InvokeServer("FlowerGarden", "ClaimPlant", count)
        count = count + 1
    end
end

local a = game.Players.LocalPlayer.Character.HumanoidRootPart
local b = workspace.__THINGS

if getgenv().config.Collectloot then
local function get()
    local cf = a.CFrame
    for i,v in pairs(b.Lootbags:GetChildren()) do
    v:PivotTo(cf)
    end
    for i,v in pairs(b.Orbs:GetChildren()) do
    v:PivotTo(cf)

    end
end

while task.wait(0.5) do
get()
end

while getgenv().config.CollectPresents do
    local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
    local result = saveModule.Get()

    local hiddenPresents = result.HiddenPresents

    for _, present in pairs(hiddenPresents) do
        local id = present.ID
        if id then
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Hidden Presents: Found"):InvokeServer(
                id
            )
        end
        task.wait(0.5)
    end
